<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:WPFUI.Controls;assembly=WPFUI">

    <Style x:Key="CardStyle1" TargetType="{x:Type controls:Card}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}"/>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Card}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="CardBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="4">
                            <ContentPresenter Margin="{TemplateBinding Padding}"/>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.16" From="1" To="0.5" Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.16" From="0.5" To="1" Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <Border x:Name="FooterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="0,0,4,4" Padding="{TemplateBinding Padding}" Visibility="Collapsed">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ControlStrokeColorSecondary}"/>
                            </Border.Background>

                            <ContentPresenter Content="{TemplateBinding Footer}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasFooter" Value="True">
                            <Setter Property="Visibility" TargetName="FooterBorder" Value="Visible"/>
                            <Setter Property="CornerRadius" TargetName="CardBorder" Value="4,4,0,0"/>
                            <Setter Property="BorderThickness" TargetName="CardBorder" Value="1,1,1,0"/>
                        </Trigger>
                        <Trigger Property="Footer" Value="{x:Null}"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CardControlStyle1" TargetType="{x:Type controls:CardControl}">
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CardControl}">
                    <Border x:Name="CardBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="4" MinHeight="68" Padding="12">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.16" From="1" To="0.5" Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.16" From="0.5" To="1" Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid x:Name="GridHeader">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <controls:SymbolIcon x:Name="CardIcon" Grid.Column="0" Filled="{TemplateBinding IconFilled}" FontSize="26" Margin="4,0,16,0" Symbol="{TemplateBinding Icon}" VerticalAlignment="Center"/>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition x:Name="SubtitleRow"/>
                                </Grid.RowDefinitions>
                                <TextBlock x:Name="TitleText" FontWeight="Medium" Margin="0,0,0,4" Grid.Row="0" Text="{TemplateBinding Title}" VerticalAlignment="Center"/>
                                <TextBlock FontSize="11" Margin="0" Grid.Row="1" Text="{TemplateBinding Subtitle}">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}"/>
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </Grid>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="2" ContentStringFormat="{TemplateBinding ContentStringFormat}" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="CheckboxCheckedSync20">
                            <Setter Property="Margin" TargetName="CardIcon" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListViewItemContainerStyle1" TargetType="{x:Type ListViewItem}">
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent">
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}" 
                            BorderThickness="1" Margin="0">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource SystemFillColorSolidNeutralBackground}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ControlTemplate.Resources>
                        <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Focusable" Value="True"/>
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Border x:Name="PART_ContentHost" Focusable="False" HorizontalAlignment="Stretch"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" ClickMode="Press" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Foreground">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}"/>
                                    <Setter Property="MinHeight" Value="34"/>
                                    <Setter Property="FontSize" Value="14"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border x:Name="MainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" CornerRadius="4">
                                                    <Border x:Name="BottomBorder" BorderThickness="0,0,0,2" CornerRadius="4" Padding="6,4">
                                                        <Border.BorderBrush>
                                                            <SolidColorBrush Color="{DynamicResource ControlStrokeColorSecondary}"/>
                                                        </Border.BorderBrush>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="20"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Border Grid.ColumnSpan="2" CornerRadius="0"/>
                                                            <Border Grid.Column="0" CornerRadius="0" Margin="0"/>
                                                            <Path x:Name="MainArrow" Grid.Column="1" Data="M0,0L0,2 4,6 8,2 8,0 4,4z" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                <Path.Fill>
                                                                    <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}"/>
                                                                </Path.Fill>
                                                            </Path>
                                                        </Grid>
                                                    </Border>
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.16" From="1" To="0.5" Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.16" From="0.5" To="1" Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Background" TargetName="MainBorder">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="{DynamicResource ControlFillColorDisabled}"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Foreground">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Fill" TargetName="MainArrow">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                        <Setter Property="BorderBrush" TargetName="BottomBorder" Value="{DynamicResource SystemAccentBrush}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentSite" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" HorizontalAlignment="Left" IsHitTestVisible="False" Margin="8" VerticalAlignment="Center"/>
                        <TextBox x:Name="PART_EditableTextBox" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="8"/>
                        <Popup AllowsTransparency="True" x:Name="Popup"  Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="Slide" Placement="Bottom">
                            <Border x:Name="DropDown" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="0,0,8,8" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0" MinWidth="{TemplateBinding ActualWidth}" Padding="0" SnapsToDevicePixels="True">
                                <Grid>
                                    <Border x:Name="DropDownBorder">
                                    </Border>
                                    <ScrollViewer Margin="0,0,-14,0" Style="{DynamicResource UiScrollViewer}" SnapsToDevicePixels="True">
                                        
                                        <StackPanel KeyboardNavigation.DirectionalNavigation="Contained" IsItemsHost="True"/>
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="Popup" Value="True">
                            <Setter Property="CornerRadius" TargetName="DropDownBorder" Value="0"/>
                            <Setter Property="Margin" TargetName="DropDownBorder" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>